{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Text, BottomNavigation } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function BottomNavigate() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    tabBar: function tabBar(_ref) {\n      var navigation = _ref.navigation,\n        state = _ref.state,\n        descriptors = _ref.descriptors,\n        insets = _ref.insets;\n      return _jsx(BottomNavigation.Bar, {\n        navigationState: state,\n        safeAreaInsets: insets,\n        onTabPress: function onTabPress(_ref2) {\n          var route = _ref2.route,\n            preventDefault = _ref2.preventDefault;\n          var event = navigation.emit({\n            type: 'tabPress',\n            target: route.key,\n            canPreventDefault: true\n          });\n        },\n        renderIcon: function renderIcon(_ref3) {\n          var route = _ref3.route,\n            focused = _ref3.focused,\n            color = _ref3.color;\n          var options = descriptors[route.key].options;\n          if (options.tabBarIcon) {\n            return options.tabBarIcon({\n              focused: focused,\n              color: color,\n              size: 24\n            });\n          }\n          return null;\n        },\n        getLabelText: function getLabelText(_ref4) {\n          var route = _ref4.route;\n          var options = descriptors[route.key].options;\n          var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.title;\n          return label;\n        }\n      });\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(Icon, {\n            name: \"home\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        tabBarLabel: 'Settings',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n            size = _ref6.size;\n          return _jsx(Icon, {\n            name: \"cog\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      variant: \"headlineMedium\",\n      children: \"Home!\"\n    })\n  });\n}\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      variant: \"headlineMedium\",\n      children: \"Settings!\"\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","createBottomTabNavigator","Text","BottomNavigation","Icon","jsx","_jsx","jsxs","_jsxs","Tab","BottomNavigate","Navigator","screenOptions","headerShown","tabBar","_ref","navigation","state","descriptors","insets","Bar","navigationState","safeAreaInsets","onTabPress","_ref2","route","preventDefault","event","emit","type","target","key","canPreventDefault","renderIcon","_ref3","focused","color","options","tabBarIcon","size","getLabelText","_ref4","label","tabBarLabel","undefined","title","children","Screen","name","component","HomeScreen","_ref5","SettingsScreen","_ref6","style","styles","container","variant","create","flex","justifyContent","alignItems"],"sources":["D:/my-app/src/components/BottomNavigation/BottomNavigation.js"],"sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Text, BottomNavigation } from 'react-native-paper';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function BottomNavigate() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n      tabBar={({ navigation, state, descriptors, insets }) => (\r\n        <BottomNavigation.Bar\r\n          navigationState={state}\r\n         safeAreaInsets={insets}\r\n          onTabPress={({ route, preventDefault }) => {\r\n            const event = navigation.emit({\r\n              type: 'tabPress',\r\n              target: route.key,\r\n              canPreventDefault: true,\r\n            });\r\n\r\n          }}\r\n          renderIcon={({ route, focused, color }) => {\r\n            const { options } = descriptors[route.key];\r\n            if (options.tabBarIcon) {\r\n              return options.tabBarIcon({ focused, color, size: 24 });\r\n            }\r\n\r\n            return null;\r\n          }}\r\n          getLabelText={({ route }) => {\r\n            const { options } = descriptors[route.key];\r\n            const label =\r\n              options.tabBarLabel !== undefined\r\n                ? options.tabBarLabel\r\n                : options.title !== undefined\r\n                ? options.title\r\n                : route.title;\r\n\r\n            return label;\r\n          }}\r\n        />\r\n      )}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarIcon: ({ color, size }) => {\r\n            return <Icon name=\"home\" size={size} color={color} />;\r\n          },\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          tabBarLabel: 'Settings',\r\n          tabBarIcon: ({ color, size }) => {\r\n            return <Icon name=\"cog\" size={size} color={color} />;\r\n          },\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text variant=\"headlineMedium\">Home!</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SettingsScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text variant=\"headlineMedium\">Settings!</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}